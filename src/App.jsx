import React, { useState } from "react";
import "./App.css";
import WorkingTodo from "components/WorkingTodo";
import DoneTodo from "components/DoneTodo";
import Button from "components/Button";

// 1. **JSX Î¨∏Î≤ï**Ïù¥ÎûÄ Î¨¥ÏóáÏùºÍπåÏöî?
// 2. ÏÇ¨Ïö©ÏûêÍ∞Ä ÏûÖÎ†•ÌïòÎäî Í∞í, ÎòêÎäî Ïù¥ÎØ∏ ÏûÖÎ†•Îêú Í∞í, Ìà¨ÎëêÏùò ÌÉÄÏù¥Îì§Í≥º Í∞ôÏùÄ **Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏùò ÏÉÅÌÉúÎ•º Í¥ÄÎ¶¨ÌïòÍ∏∞ ÏúÑÌï¥ Î¶¨Ïï°Ìä∏Ïùò Ïñ¥Îñ§ Í∏∞Îä•ÏùÑ ÏÇ¨Ïö©ÌïòÏÖ®ÎÇòÏöî**?
// 3. Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏùò **ÏÉÅÌÉú Í∞íÎì§ÏùÑ Ïª¥Ìè¨ÎÑåÌä∏ Í∞Ñ Ïñ¥Îñ§ Î∞©ÏãùÏúºÎ°ú Í≥µÏú†ÌïòÏÖ®ÎÇòÏöî**?
// 4. Í∏∞Îä• Íµ¨ÌòÑÏùÑ ÏúÑÌï¥ **Î∂àÎ≥ÄÏÑ± Ïú†ÏßÄÍ∞Ä** ÌïÑÏöîÌïú Î∂ÄÎ∂ÑÏù¥ ÏûàÏóàÎã§Î©¥ ÌïòÎÇòÎßå ÏÑ§Î™ÖÌï¥ Ï£ºÏÑ∏Ïöî.
// 5. Î∞òÎ≥µÎêòÎäî Ïª¥Ìè¨ÎÑåÌä∏Î•º ÌååÏïÖÌïòÍ≥† Ïû¨ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎäî **Ïª¥Ìè¨ÎÑåÌä∏Î°ú Î∂ÑÎ¶¨Ìï¥ Î≥¥ÏÖ®ÎÇòÏöî?** Í∑∏Î†áÎã§Î©¥ **Ïñ¥Îñ†Ìïú Ïù¥Ï†êÏù¥ ÏûàÏóàÎÇòÏöî?**

// ÏÇ¨Ïö©Ìïú hookÏùÄ Ïò§ÏßÅ useState
// Í∏∞Îä• Íµ¨ÌòÑÏùÑ ÏúÑÌï¥ ÏÉùÏÑ±Ìïú Ìï®ÏàòÎäî 2Í∞ú ÏûÖÎãàÎã§. `onChangeHandler` , `onSubmitHandler`
// ÏÇ¨Ïö©Ìïú javascript ÎÇ¥Ïû• Î©îÏÑúÎìúÎäî `map`, `filter` ÏûÖÎãàÎã§.
// todoÏùò initial stateÎäî `{id: 0, title: ‚Äú‚Äù, body: ‚Äú‚Äù, isDone: false}` ÏûÖÎãàÎã§.

const App = () => {
  // Íµ¨Ï°∞Î∂ÑÌï¥Ìï†Îãπ
  const [todo, setTodo] = useState([]);
  const [title, setTitle] = useState('');
  const [body, setBody] = useState('');

  const titleChangeHandler = (event) => {
    setTitle(event.target.value);
  }

  const bodyChangeHandler = (event) => {
    setBody(event.target.value);
  }

  // TODO LIST ÏûëÏÑ±ÌïòÍ≥† Ï∂îÍ∞Ä Î≤ÑÌäº ÌÅ¥Î¶≠Ïãú ÎÇ¥Ïö© Ï∂îÍ∞Ä
  const clickAddHandler = (event) => {
    // 1. ÏÉàÎ°úÏö¥ ÌòïÌÉúÏùò Ïù¥ÎÜàÏùÑ ÎßåÎì†Îã§
    // Ïù¥ÎÜà : {id:1, age:30, name:"ÏÜ°Ï§ëÍ∏∞"},
    // 2. Ïù¥ÎÜàÏùÑ Î∞∞Ïó¥Ïóê ÎçîÌïúÎã§.
    if(title && body) {
      const newTodo = {
        id: todo.length + 1,
        title: title, 
        body: body,
      }
      setTodo([...todo, newTodo]) // ÏõêÎûò ÏûàÏóàÎçò Î∞∞Ïó¥ÏùÑ Ïãπ ÌíÄÍ≥† Ï†ÄÍ±∞Î•º Ï∂îÍ∞ÄÌï®
      // todo listÎ•º ÏûÖÎ†•Ìïú ÌõÑ ÏûÖÎ†•ÌïòÎäî Ïπ∏ ÏßÄÏö∞Í∏∞
      setTitle('');
      setBody('');
    } else if (!body || !title) { // Ï†úÎ™©Ïù¥ÎÇò ÎÇ¥Ïö©Ïù¥ ÏûÖÎ†•ÎêòÏßÄ ÏïäÏïòÏùÑ Ïãú alert Ï∞Ω ÎùÑÏö∞Í∏∞
      alert('ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî');
    } else { // ÏïÑÎ¨¥Í≤ÉÎèÑ ÏûÖÎ†•ÎêòÏßÄ ÏïäÏïòÎã§Î©¥ ÏûÖÎ†•Ïù¥ ÏóÜÎã§Îäî alert Ï∞Ω ÎùÑÏö∞Í∏∞
      alert('ÏûÖÎ†•Ïù¥ Ï†úÎåÄÎ°ú ÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§');
    }
  }

  // ÏÇ≠Ï†ú Î≤ÑÌäº ÌÅ¥Î¶≠(x)
  const clickDelHandler = (id) => {
    // ÎßåÏïΩ ÏÜ°Ï§ëÍ∏∞Í∞Ä Îì§Ïñ¥Í∞Ä ÏûàÎäî Í∞íÏùÑ Î∫ÄÎã§Î©¥?
    const newTodo = todo.filter(todo => todo.id !== id);
    /* ÌôîÏÇ¥Ìëú Ìï®ÏàòÍ∞Ä ÏïÑÎãå functionÌï®ÏàòÎ°ú ÌïòÎ©¥ 
    const newUsers = users.filter(function(user) {
      return user.id !== id;
    }
    */
    setTodo(newTodo);
  }

  // ÏôÑÎ£åÏãú DoneÏúºÎ°ú Ïù¥Îèô
  const clickDoneHandler = (id) => {
    const newTodo = todo.map(function (todo) {
      if(todo.id === id) {
        return {...todo, isDone:true};
      }
      return todo;
    }) 
    setTodo(newTodo);
  }

  // Ï∑®ÏÜåÎ≤ÑÌäº ÌÅ¥Î¶≠Ïãú Îã§Ïãú WorkingÏúºÎ°ú ÏòÆÍ≤®ÏßÄÎèÑÎ°ù
  // ÏôÑÎ£åÏãú DoneÏúºÎ°ú Ïù¥Îèô
  const clickCancelHandler = (id) => {
    const newTodo = todo.map(function (todo) {
      if(todo.id === id) {
        return {...todo, isDone:false};
      }
      return todo;
    }) 
    setTodo(newTodo);
  }

  return (
    <div className="container">
      <header>
        <div className="title">myTodoList</div>
        <div className="subTitle">React</div>
      </header>
      <hr />

      <div className="inputTodo">
        <div className="inputTitle">
          <p>
            <strong>Ï†úÎ™© : &nbsp;</strong>
          <input 
            value={title}
            onChange={titleChangeHandler}
          />
          </p>
        </div>
        <div className="inputContent">
          <p>
            <strong>ÎÇ¥Ïö© : &nbsp;</strong>
          <input 
            value={body}
            onChange={bodyChangeHandler}
          />
          </p>
        </div>
        <div className="plusButton">
          <Button clickAddHandler={clickAddHandler}><strong>Ï∂îÍ∞ÄÌïòÍ∏∞</strong></Button>
        </div>
      </div>

      <div className="working">
        <h2>Working...üî•</h2>
      </div>

      <div className="app-style">
      {
        todo.filter((item) => !item.isDone).map((item) => (
          <WorkingTodo key={item.id} item={item} clickDelHandler={clickDelHandler} clickDoneHandler={clickDoneHandler}/>
        ))
      }
      </div>

      <div className="done">
        <h2>Done‚úîÔ∏è</h2>
      </div>

      <div className="app-style">
      {
        todo.filter((item) => item.isDone).map((item) => (
          <DoneTodo key={item.id} item={item} clickDelHandler={clickDelHandler} clickCancelHandler={clickCancelHandler}/>
        ))
      }
      </div>

    </div>
  );
};

export default App;